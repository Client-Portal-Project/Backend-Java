#Server port
server.port=8080
server.servlet.context-path=/clientportal

#JDBC Configuration
#spring.datasource.url=jdbc:postgresql://${AWS_DATABASE_URI}/client_portal_java
#spring.datasource.username=${AWS_DATABASE_USERNAME}
#spring.datasource.password=${AWS_DATABASE_PASSWORD}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL82Dialect

#JDBC Configuration
#spring.datasource.url=jdbc:h2:file:./h2database/h2file
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Visit http://localhost:3000/clientportal/h2-console to login and view the contents of the H2 database
#spring.h2.console.enabled=true

#JPA Configuration
#spring.jpa.show-sql=false
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.properties.hibernate.temp.user_jdbc_metadata_defaults=false
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.main.allow-bean-definition-overriding=true

spring.datasource.url=jdbc:postgresql://cpp-database.cfoxoiklzn1n.us-east-1.rds.amazonaws.com:5432/clientPortalProject
spring.datasource.username=postgres
spring.datasource.password=MarL#Pueiy$190Zi
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#JDBC Configuration
#spring.datasource.url=jdbc:h2:file:./h2database/h2file
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Visit 
#http://localhost:8080/clientportal/h2-console
# to login and view the contents of the H2 database
#spring.h2.console.enabled=false

#JPA Configuration
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.main.allow-bean-definition-overriding=true 
